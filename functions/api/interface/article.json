{
  "article": {
    "id": 105040,
    "post_type": "Article",
    "title": "Go製の全文検索エンジンOmochiを作った.",
    "slug": "7e2c67d8406f0d",
    "comments_count": 0,
    "liked_count": 178,
    "body_letters_count": 22618,
    "article_type": "tech",
    "emoji": "😊",
    "is_suspending_private": false,
    "published_at": "2022-07-25T11:45:25.013+09:00",
    "body_updated_at": "2022-07-25T11:45:25.013+09:00",
    "source_repo_updated_at": "2022-07-25T11:45:25.013+09:00",
    "pinned": false,
    "path": "/yukiyada/articles/7e2c67d8406f0d",
    "body_html": "\u003ch1 id=\"1.%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#1.%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\" aria-hidden=\"true\"\u003e\u003c/a\u003e 1.はじめに\u003c/h1\u003e\n\u003cp\u003e膨大な量の電子データから目的となるデータを取得・抽出する情報検索。その技術は広く普及し、多くの人々が、様々な場面でその恩恵を受けています。\u003ca href=\"https://google.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eGoogle\u003c/a\u003eや\u003ca href=\"https://www.bing.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eBing\u003c/a\u003eをはじめとした、世の中に大きなインパクトを与えるWeb検索がその代表例ですが、物件検索や論文検索、メール検索などその応用は様々です。\u003c/p\u003e\n\u003cp\u003eさて、今回取り組んだのは、Goによる転置インデックスを用いた全文検索エンジンのスクラッチ実装です。研究で自然言語処理を学んだことをきっかけに、情報検索や転置インデックスといったトピックに強い興味が湧いたので、Elasticsearch等には頼らず、ゼロから実装を行いました。以下、リポジトリになります。\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"embed-block zenn-embedded zenn-embedded-card\"\u003e\u003ciframe id=\"zenn-embedded__47ab03395ee96\" src=\"https://embed.zenn.studio/card#zenn-embedded__47ab03395ee96\" data-content=\"https%3A%2F%2Fgithub.com%2FYadaYuki%2Fomochi%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"\u003e\u003c/iframe\u003e\u003c/span\u003e\u003ca href=\"https://github.com/YadaYuki/omochi/\" style=\"display:none\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003ehttps://github.com/YadaYuki/omochi/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e本記事では、Omochiの設計・実装に関する説明を行なっていきます。\u003c/p\u003e\n\u003ch1 id=\"2.%E8%BB%A2%E7%BD%AE%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E5%9E%8B%E3%83%BB%E5%85%A8%E6%96%87%E6%A4%9C%E7%B4%A2%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3omochi\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#2.%E8%BB%A2%E7%BD%AE%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E5%9E%8B%E3%83%BB%E5%85%A8%E6%96%87%E6%A4%9C%E7%B4%A2%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3omochi\" aria-hidden=\"true\"\u003e\u003c/a\u003e 2.転置インデックス型・全文検索エンジンOmochi\u003c/h1\u003e\n\u003cp\u003eリポジトリの\u003ca href=\"https://github.com/YadaYuki/omochi/#readme\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eREADME.md\u003c/a\u003eにも記載がありますが、今回実装した全文検索エンジンOmochiは以下のような特徴を持ちます。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e転置インデックスを用いた全文検索エンジン.\u003c/li\u003e\n\u003cli\u003eRESTful API 経由で、事前に登録した文書群を対象に検索が可能\u003c/li\u003e\n\u003cli\u003e複数単語を用いた検索は、AND検索・OR検索に対応\u003c/li\u003e\n\u003cli\u003e登録可能な言語：日本語, 英語\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eここで、全文検索エンジンOmochiの内部構造を概観するために、概要図を見てみましょう.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://user-images.githubusercontent.com/57289763/179801992-6963b38e-4d3b-44d1-9612-e91c374d194c.png\" alt=\"Omochiの概観図\" loading=\"lazy\" class=\"md-img\"\u003e\u003c/p\u003e\n\u003cp\u003eOmochiは\u003cstrong\u003e事前登録された文書の中から、検索ワードが含まれる文書のみ抽出し、検索ワードの関連度に応じて並び替えた結果を返す\u003c/strong\u003eという非常にシンプルな全文検索エンジンです。\u003c/p\u003e\n\u003cp\u003e概要図にあるように、\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\"Toy Story\"\u003c/li\u003e\n\u003cli\u003e\"The Wolf of Wall Street\"\u003c/li\u003e\n\u003cli\u003e\"The NeverEnding Story\"\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eという3つの映画タイトルが文書として事前に登録されていた場合、\u003cstrong\u003e[\"toy\"]という検索ワードで検索を行うと\"toy\"という単語を含む[\"Toy Story\"]という検索結果を得ることが可能\u003c/strong\u003eです。(大文字・小文字は区別しない)\u003c/p\u003e\n\u003cp\u003e更に、概要図からわかる通り、検索エンジンOmochiは\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e文書の登録(転置インデックスの作成等も含む)を行う\u003cstrong\u003eインデクサ(Indexer)\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003e情報要求に対する文書の検索処理を行う\u003cstrong\u003eサーチャー(Searcher)\u003c/strong\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eという大きく分けて2つのパーツから構成されていることがわかります。\u003c/p\u003e\n\u003cp\u003e次章以降では、Omochiの全体的な設計に加え、それぞれのパーツに対する実装の詳細(インデクサ・サーチャ)を見ていきましょう.\u003c/p\u003e\n\u003ch1 id=\"3-omochi%E3%81%AE%E6%8A%80%E8%A1%93%E9%81%B8%E5%AE%9A\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#3-omochi%E3%81%AE%E6%8A%80%E8%A1%93%E9%81%B8%E5%AE%9A\" aria-hidden=\"true\"\u003e\u003c/a\u003e 3 Omochiの技術選定\u003c/h1\u003e\n\u003cp\u003eタイトルにもある通り、検索エンジンOmochiは開発言語としては\u003ca href=\"https://go.dev/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cstrong\u003eGo\u003c/strong\u003e\u003c/a\u003eを用いています。個人開発なので、使ってみたかったという背景も大きいですが、検索エンジンのように、形態素解析や関連性のスコアリングなど、\u003cstrong\u003e実行するロジックが複雑であり、速度が求められるアプリケーション\u003c/strong\u003eと\u003cstrong\u003eGoの持つ高速性\u003c/strong\u003eはなかなか相性が良いのではないのでしょうか。\u003c/p\u003e\n\u003cp\u003eまた、後の章でも触れますが、\u003cstrong\u003eデモで用いるテストデータ(数千 ~ 数万件程度の文書データ)を検索エンジンに登録する処理(\u003ca href=\"https://github.com/YadaYuki/omochi/blob/master/cmd/seeds/ja/seed.go\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eseed.go\u003c/a\u003e)では、ゴルーチンによる並行処理を用いています\u003c/strong\u003e。そのため、Goの\u003cstrong\u003e新たなスレッド(ゴルーチン)の作成と作成した複数のゴルーチンの管理をシンプルに記述することができる点\u003c/strong\u003eも非常に魅力的であると感じました。\u003c/p\u003e\n\u003cp\u003eそして、周辺ツールとしては以下を用いています。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://pkg.go.dev/net/http\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003enet/http\u003c/a\u003e + \u003ca href=\"https://github.com/go-chi/chi\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003echi\u003c/a\u003e (Web application server)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.docker.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eDocker\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://mariadb.com/kb/ja/mariadb/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eMariadb\u003c/a\u003e(MySQL)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eなお、今回OmochiではORMとして、Facebook製の\u003ca href=\"https://entgo.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eent\u003c/a\u003eを採用しました。entには\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003egoのコードによるスキーマ(テーブル)の定義が可能\u003c/li\u003e\n\u003cli\u003e自動生成される静的型付けされた関数によって、SQL等を一切書かず、DBに対する操作ができる\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e等のメリットがあり、DBに対する操作を以下のようなコードで記述することが可能で、とても便利です。(\u003ca href=\"https://entgo.io/docs/getting-started#create-your-first-entity\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e公式Document\u003c/a\u003eより)\u003c/p\u003e\n\u003cdiv class=\"code-block-container\"\u003e\u003cpre class=\"language-go\"\u003e\u003ccode class=\"language-go\"\u003e\u003cspan class=\"token keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"token function\"\u003eCreateUser\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx context\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eContext\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e client \u003cspan class=\"token operator\"\u003e*\u003c/span\u003eent\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eClient\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003eent\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eUser\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token builtin\"\u003eerror\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n    u\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e err \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e client\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eUser\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\n        \u003cspan class=\"token function\"\u003eCreate\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\n        \u003cspan class=\"token function\"\u003eSetAge\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token number\"\u003e30\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\n        \u003cspan class=\"token function\"\u003eSetName\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token string\"\u003e\"a8m\"\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\n        \u003cspan class=\"token function\"\u003eSave\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"token operator\"\u003e...\u003c/span\u003e \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以上がOmochiを構成する技術スタックの紹介になります\u003c/p\u003e\n\u003ch2 id=\"4.%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E6%A7%8B%E6%88%90%E6%A6%82%E8%A6%B3(%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E8%A8%AD%E8%A8%88)\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#4.%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E6%A7%8B%E6%88%90%E6%A6%82%E8%A6%B3(%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E8%A8%AD%E8%A8%88)\" aria-hidden=\"true\"\u003e\u003c/a\u003e 4.フォルダ構成概観(アプリケーション設計)\u003c/h2\u003e\n\u003cp\u003eここでは、Omochiのアプリケーション設計に関する説明を行います。アプリケーションの全体像を把握するために、フォルダ構成を概観してみましょう\u003c/p\u003e\n\u003cdiv class=\"code-block-container\"\u003e\u003cpre\u003e\u003ccode\u003e├── LICENSE\n├── README.md\n├── cmd \n│   ├── api/ # サーバ起動のためのコード\n│   │   └── main.go\n│   ├── migrate/\n│   └── seeds/\n├── docker\n│   ├── api/\n│   └── db/\n├── docker-compose.yml\n├── docs\n├── go.mod\n├── go.sum\n├── pkg # レイヤードアーキテクチャによるアプリケーションの実装\n│   ├── common/ # 全体共通の処理・定数等の定義\n│   │   ├── constant\n│   │   └── slices\n│   ├── config/ \n│   ├── domain\n│   │   ├── entities\n│   │   │   ├── document.go\n│   │   │   ├── invert_index.go\n│   │   │   ├── posting.go\n│   │   │   ├── query.go\n│   │   │   └── term.go\n│   │   ├── repository\n│   │   │   ├── document_repository.go\n│   │   │   └── term_repository.go\n│   │   └── service\n│   │       ├── document_ranker.go\n│   │       ├── indexer.go\n│   │       ├── invert_index_compresser.go\n│   │       ├── searcher.go\n│   │       └── tokenizer.go\n│   ├── ent/ # go(ent)によるDBのスキーマの定義・entにより自動生成されるコード\n│   ├── errors/ \n│   ├── infrastructure\n│   │   ├── compresser\n│   │   │   ├── zlib_invert_index_compresser.go\n│   │   │   └── zlib_invert_index_compresser_test.go\n│   │   ├── documentranker\n│   │   │   └── tfidfranker\n│   │   ├── indexer\n│   │   │   ├── indexer.go\n│   │   │   └── indexer_test.go\n│   │   ├── persistence\n│   │   ├── searcher\n│   │   │   ├── searcher.go\n│   │   │   └── searcher_test.go\n│   │   ├── tokenizer\n│   │   │   ├── eng\n│   │   │   └── ja\n│   │   ...\n│   ├── interface/ \n│   └── usecase/ \n└── scripts\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eフォルダ構成からわかる通り、今回は以下の4つのレイヤを持つレイヤードアーキテクチャを採用しました。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eインターフェース層(pkg/interface)\u003c/li\u003e\n\u003cli\u003eアプリケーション層 (pkg/usecase)\u003c/li\u003e\n\u003cli\u003eドメイン層(pkg/domain)\u003c/li\u003e\n\u003cli\u003eインフラストラクチャ層(pkg/infrastructure)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e観測した限り、GoによるOSSでレイヤードアーキテクチャを採用しているものは少ないように感じられます。そんな中、Omochiでレイヤードアーキテクチャを採用した理由としては、\u003cstrong\u003e各レイヤーの外側からレイヤー内部の実装が見えないように抽象化を施すことによって、検索エンジンを構成する具体的な技術を剥がしやすくしたかったこと\u003c/strong\u003eが挙げられます。\u003c/p\u003e\n\u003cp\u003eここでいう検索エンジンを構成する具体的な技術とは、例えば以下が挙げられます。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e形態素解析・分かち書きのツール・ライブラリ(kagome,prose,nltk)\u003c/li\u003e\n\u003cli\u003e転置インデックス・文書を永続化するためのツール(RDB,NoSQL)\u003c/li\u003e\n\u003cli\u003eデータ操作のためのライブラリ(ent,gorm)\u003c/li\u003e\n\u003cli\u003eスコアリングアルゴリズム(TfIdf,BM25)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e以上の背景から、アプリケーションの設計として、レイヤードアーキテクチャを採用し、実装を行いました。\u003c/p\u003e\n\u003ch1 id=\"5.%E3%82%A4%E3%83%B3%E3%83%87%E3%82%AF%E3%82%B5%E3%81%AE%E5%AE%9F%E8%A3%85(indexer)\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#5.%E3%82%A4%E3%83%B3%E3%83%87%E3%82%AF%E3%82%B5%E3%81%AE%E5%AE%9F%E8%A3%85(indexer)\" aria-hidden=\"true\"\u003e\u003c/a\u003e 5.インデクサの実装(Indexer)\u003c/h1\u003e\n\u003cp\u003eさて、技術選定や設計といったアプリケーションの全体像が掴めたところで、本章からは、具体的な実装レベルの説明を行っていきます。\u003c/p\u003e\n\u003cp\u003e本章では、検索対象となる文書(Document)の検索エンジンへの登録を行うインデクサのGoによる実装を説明します。Omochiにおけるインデクサは\u003ca href=\"https://github.com/YadaYuki/omochi/blob/add-license-1/pkg/infrastructure/indexer/indexer.go#L13-L18\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eIndexer\u003c/a\u003eというGoの構造体で実装されており、\u003ca href=\"https://github.com/YadaYuki/omochi/blob/add-license-1/pkg/infrastructure/indexer/indexer.go#L24\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eIndexer.IndexingDocument\u003c/a\u003e関数を実行することによって、文書の登録が可能です。\u003c/p\u003e\n\u003cp\u003e文書の登録を実行するIndexer.IndexingDocument関数では、登録される文書である\u003ca href=\"https://github.com/YadaYuki/omochi/blob/add-license-1/pkg/domain/entities/document.go#L15-L18\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eDocumentCreate\u003c/a\u003eという型のデータを引数として\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e文書を単語(ターム)に分割し、索引対象となる単語を抽出する\u003c/li\u003e\n\u003cli\u003e文書(ドキュメント)の新規作成(永続化)\u003c/li\u003e\n\u003cli\u003e転置インデックスの作成\u003c/li\u003e\n\u003cli\u003e作成した転置インデックスを圧縮する\u003c/li\u003e\n\u003cli\u003e転置インデックスの新規登録 もしくは 更新(永続化)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eという5つの処理を実行します。\u003c/p\u003e\n\u003ch2 id=\"5.1-%E8%BB%A2%E7%BD%AE%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E3%81%A8%E3%81%AF%EF%BC%9F\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#5.1-%E8%BB%A2%E7%BD%AE%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E3%81%A8%E3%81%AF%EF%BC%9F\" aria-hidden=\"true\"\u003e\u003c/a\u003e 5.1 転置インデックスとは？\u003c/h2\u003e\n\u003cp\u003eさて、IndexingDocumentの具体的な実装を見ていく前にOmochi(と多くの検索エンジン)を支えるデータ構造である転置インデックスに関する説明をしていきます。\u003c/p\u003e\n\u003cp\u003e転置インデックスは、文書群内に登場する「単語\u003cembed-katex\u003e\u003ceq class=\"zenn-katex\"\u003ew\u003c/eq\u003e\u003c/embed-katex\u003e」と「単語wが登場する文書iに関する情報\u003cembed-katex\u003e\u003ceq class=\"zenn-katex\"\u003eD_i\u003c/eq\u003e\u003c/embed-katex\u003e(文書id、文書内で\u003cembed-katex\u003e\u003ceq class=\"zenn-katex\"\u003ew\u003c/eq\u003e\u003c/embed-katex\u003eが登場する位置や回数..etc)」を紐付けた以下のようなデータ構造を指します。\u003c/p\u003e\n\u003csection class=\"zenn-katex\"\u003e\u003ceqn\u003e\u003cembed-katex display-mode=\"1\"\u003e \\{w_1: [D_1,D_2...],w_2: [D_2,D_5...],... \\} \u003c/embed-katex\u003e\u003c/eqn\u003e\u003c/section\u003e\n\u003cp\u003eここでは、文書郡内に登場し、索引対象となる単語\u003cembed-katex\u003e\u003ceq class=\"zenn-katex\"\u003ew\u003c/eq\u003e\u003c/embed-katex\u003eを\u003cstrong\u003eターム\u003c/strong\u003e、タームに紐づいた文書情報の配列(\u003cembed-katex\u003e\u003ceq class=\"zenn-katex\"\u003e[D_i,...]\u003c/eq\u003e\u003c/embed-katex\u003e)を\u003cstrong\u003eポスティングリスト\u003c/strong\u003eと呼びます。\u003c/p\u003e\n\u003cp\u003eそれでは例として、以下の3つの文書(映画タイトル)が検索対象となるような検索エンジンを想定して、転置インデックスを作成してみましょう。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003e\"Toy Story\"\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\"The Wolf of Wall Street\"\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\"The NeverEnding Story\"\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eポスティングリストの各アイテムには、「文書id」と「各文書における単語の登場位置」を格納するとして、以下のような転置インデックスが得られます。\u003c/p\u003e\n\u003cdiv class=\"code-block-container\"\u003e\u003cpre class=\"language-js\"\u003e\u003ccode class=\"language-js\"\u003e\u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"token string-property property\"\u003e\"NeverEnding\"\u003c/span\u003e\u003cspan class=\"token operator\"\u003e:\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\n        \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\u003cspan class=\"token string-property property\"\u003e\"document_id\"\u003c/span\u003e\u003cspan class=\"token operator\"\u003e:\u003c/span\u003e \u003cspan class=\"token number\"\u003e3\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token string-property property\"\u003e\"positions_in_document\"\u003c/span\u003e\u003cspan class=\"token operator\"\u003e:\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token number\"\u003e1\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e \u003cspan class=\"token comment\"\u003e// 文書id=3の文書(\"The NeverEnding Story\")の1単語目(0から数える)に登場\u003c/span\u003e\n    \u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"token string-property property\"\u003e\"Story\"\u003c/span\u003e\u003cspan class=\"token operator\"\u003e:\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\n        \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\u003cspan class=\"token string-property property\"\u003e\"document_id\"\u003c/span\u003e\u003cspan class=\"token operator\"\u003e:\u003c/span\u003e \u003cspan class=\"token number\"\u003e1\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token string-property property\"\u003e\"positions_in_document\"\u003c/span\u003e\u003cspan class=\"token operator\"\u003e:\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token number\"\u003e1\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\u003cspan class=\"token string-property property\"\u003e\"document_id\"\u003c/span\u003e\u003cspan class=\"token operator\"\u003e:\u003c/span\u003e \u003cspan class=\"token number\"\u003e3\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token string-property property\"\u003e\"positions_in_document\"\u003c/span\u003e\u003cspan class=\"token operator\"\u003e:\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token number\"\u003e1\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \n    \u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"token string-property property\"\u003e\"Street\"\u003c/span\u003e\u003cspan class=\"token operator\"\u003e:\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\n        \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\u003cspan class=\"token string-property property\"\u003e\"document_id\"\u003c/span\u003e\u003cspan class=\"token operator\"\u003e:\u003c/span\u003e \u003cspan class=\"token number\"\u003e2\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token string-property property\"\u003e\"positions_in_document\"\u003c/span\u003e\u003cspan class=\"token operator\"\u003e:\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token number\"\u003e4\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"token string-property property\"\u003e\"The\"\u003c/span\u003e\u003cspan class=\"token operator\"\u003e:\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\n        \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\u003cspan class=\"token string-property property\"\u003e\"document_id\"\u003c/span\u003e\u003cspan class=\"token operator\"\u003e:\u003c/span\u003e \u003cspan class=\"token number\"\u003e2\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token string-property property\"\u003e\"positions_in_document\"\u003c/span\u003e\u003cspan class=\"token operator\"\u003e:\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token number\"\u003e0\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\u003cspan class=\"token string-property property\"\u003e\"document_id\"\u003c/span\u003e\u003cspan class=\"token operator\"\u003e:\u003c/span\u003e \u003cspan class=\"token number\"\u003e3\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token string-property property\"\u003e\"positions_in_document\"\u003c/span\u003e\u003cspan class=\"token operator\"\u003e:\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token number\"\u003e0\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"token spread operator\"\u003e...\u003c/span\u003e\n\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e多くの検索エンジンでは、このように、\u003cstrong\u003e転置インデックスという非常にシンプルでわかりやすいデータ構造\u003c/strong\u003eを事前に作成・保存します。これによって、ユーザが要求する単語の含まれる文書群への高速なアクセスを実現しています。\u003c/p\u003e\n\u003ch2 id=\"5.2-indexer%E3%83%BBindexingdocument%E9%96%A2%E6%95%B0\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#5.2-indexer%E3%83%BBindexingdocument%E9%96%A2%E6%95%B0\" aria-hidden=\"true\"\u003e\u003c/a\u003e 5.2 Indexer・IndexingDocument関数\u003c/h2\u003e\n\u003cp\u003e転置インデックスについて理解が深まったところで、インデクサの実装を見ていきましょう。実装をみていく前に\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e文書をターム(単語)に分割し、索引対象となるタームを抽出する手法\u003c/li\u003e\n\u003cli\u003e転置インデックスの圧縮手法\u003c/li\u003e\n\u003cli\u003e転置インデックス・文書の永続化\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eという3点について補足で説明を行います\u003c/p\u003e\n\u003ch3 id=\"%E6%96%87%E6%9B%B8%E3%82%92%E3%82%BF%E3%83%BC%E3%83%A0(%E5%8D%98%E8%AA%9E)%E3%81%AB%E5%88%86%E5%89%B2%E3%81%97%E3%80%81%E7%B4%A2%E5%BC%95%E5%AF%BE%E8%B1%A1%E3%81%A8%E3%81%AA%E3%82%8B%E3%82%BF%E3%83%BC%E3%83%A0%E3%82%92%E6%8A%BD%E5%87%BA%E3%81%99%E3%82%8B%E6%89%8B%E6%B3%95\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#%E6%96%87%E6%9B%B8%E3%82%92%E3%82%BF%E3%83%BC%E3%83%A0(%E5%8D%98%E8%AA%9E)%E3%81%AB%E5%88%86%E5%89%B2%E3%81%97%E3%80%81%E7%B4%A2%E5%BC%95%E5%AF%BE%E8%B1%A1%E3%81%A8%E3%81%AA%E3%82%8B%E3%82%BF%E3%83%BC%E3%83%A0%E3%82%92%E6%8A%BD%E5%87%BA%E3%81%99%E3%82%8B%E6%89%8B%E6%B3%95\" aria-hidden=\"true\"\u003e\u003c/a\u003e \u003cstrong\u003e文書をターム(単語)に分割し、索引対象となるタームを抽出する手法\u003c/strong\u003e\n\u003c/h3\u003e\n\u003cp\u003e転置インデックスを作成する際に重要となる\u003cstrong\u003e文書をターム(単語)に分割し、索引対象となるタームを抽出する\u003c/strong\u003e手法には、\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003en-gram\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://taku910.github.io/mecab/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eMecab\u003c/a\u003e等のソフトウェアを用いた分かち書き\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eなど様々な手法が存在します。その中でも、Omochiは、日本語・英語のそれぞれに対して、Goで分かち書きや形態素解析を容易に実装することができる\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e日本語: \u003ca href=\"https://github.com/ikawaha/kagome\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eKagome\u003c/a\u003eによる分かち書き・形態素解析\u003c/li\u003e\n\u003cli\u003e英語: \u003ca href=\"https://github.com/jdkato/prose\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eProse\u003c/a\u003eによる単語への分割・形態素解析\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eというツールを活用し、文書の単語への分割および索引対象となる単語を抽出を実現しています。\u003c/p\u003e\n\u003ch3 id=\"%E8%BB%A2%E7%BD%AE%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E3%81%AE%E5%9C%A7%E7%B8%AE%E6%89%8B%E6%B3%95\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#%E8%BB%A2%E7%BD%AE%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E3%81%AE%E5%9C%A7%E7%B8%AE%E6%89%8B%E6%B3%95\" aria-hidden=\"true\"\u003e\u003c/a\u003e \u003cstrong\u003e転置インデックスの圧縮手法\u003c/strong\u003e\n\u003c/h3\u003e\n\u003cp\u003e検索エンジンに登録される文書のデータ量が増えると、転置インデックスのサイズが非常に大きくなることがあります。そのため、Omochiを含む、多くの検索エンジンでは\u003cstrong\u003e転置インデックスを圧縮して永続化しています。\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eOmochiでは、\u003cstrong\u003e転置インデックスに含まれるデータの大部分を占めるポスティングリストを圧縮する\u003c/strong\u003eことで、保存時における転置インデックスのデータ量を削減しています。\u003c/p\u003e\n\u003cp\u003eポスティングリストの圧縮は以下の2つの手順で実行されます\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eポスティングリストを格納する配列を\u003ca href=\"https://pkg.go.dev/encoding/gob\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003egob\u003c/a\u003eによりシリアライズ化(バイト型の配列に変換)\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e「1」により得られたバイト型の配列を\u003ca href=\"https://pkg.go.dev/compress/zlib\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003ezlib\u003c/a\u003eによって圧縮。\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eなお、2つの手順は、いずれもgoの標準パッケージのみで実装が可能です。\u003c/p\u003e\n\u003ch3 id=\"%E8%BB%A2%E7%BD%AE%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9(%E5%9C%A7%E7%B8%AE%E6%B8%88%E3%81%BF)%E3%83%BB%E6%96%87%E6%9B%B8%E3%81%AE%E6%B0%B8%E7%B6%9A%E5%8C%96\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#%E8%BB%A2%E7%BD%AE%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9(%E5%9C%A7%E7%B8%AE%E6%B8%88%E3%81%BF)%E3%83%BB%E6%96%87%E6%9B%B8%E3%81%AE%E6%B0%B8%E7%B6%9A%E5%8C%96\" aria-hidden=\"true\"\u003e\u003c/a\u003e \u003cstrong\u003e転置インデックス(圧縮済み)・文書の永続化\u003c/strong\u003e\n\u003c/h3\u003e\n\u003cp\u003eすでに述べた通り、永続化のためのツールとORMにはそれぞれMySQLとentを用いています。\u003c/p\u003e\n\u003cp\u003eしかし、Indexer・IndexingDocument関数は、\u003cstrong\u003e「具体ではなく抽象に依存する」というDIPのルールを守るべく、domainレイヤで定義された抽象(\u003ca href=\"https://github.com/YadaYuki/omochi/blob/534ce5cbe66e9bfce60ba8ee6ffad8d990543800/pkg/domain/repository/document_repository.go#L10\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eDocumentRepository\u003c/a\u003eインターフェース)に依存するように実装されています\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003eそのため、MySQLやentといったツール群の知識はIndexerの実装に含んでいません。\u003ca href=\"https://github.com/YadaYuki/omochi/blob/534ce5cbe66e9bfce60ba8ee6ffad8d990543800/cmd/seeds/ja/seed.go#L48\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eIndexerを初期化\u003c/a\u003eする際に、MySQLと接続するEntクライアントを関数の引数として与えています(Dependency Injection)\u003c/p\u003e\n\u003cp\u003e以上の3点を踏まえて、IndexerおよびIndexingDocument関数の実装を見てみましょう。\u003c/p\u003e\n\u003cdiv class=\"code-block-container\"\u003e\u003cpre class=\"language-go\"\u003e\u003ccode class=\"language-go\"\u003e\u003cspan class=\"token keyword\"\u003epackage\u003c/span\u003e indexer\n\n\u003cspan class=\"token keyword\"\u003eimport\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\n\t\u003cspan class=\"token string\"\u003e\"context\"\u003c/span\u003e\n\n\t\u003cspan class=\"token string\"\u003e\"github.com/YadaYuki/omochi/pkg/domain/entities\"\u003c/span\u003e\n\t\u003cspan class=\"token string\"\u003e\"github.com/YadaYuki/omochi/pkg/domain/repository\"\u003c/span\u003e\n\t\u003cspan class=\"token string\"\u003e\"github.com/YadaYuki/omochi/pkg/domain/service\"\u003c/span\u003e\n\t\u003cspan class=\"token string\"\u003e\"github.com/YadaYuki/omochi/pkg/errors\"\u003c/span\u003e\n\t\u003cspan class=\"token string\"\u003e\"github.com/YadaYuki/omochi/pkg/errors/code\"\u003c/span\u003e\n\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"token keyword\"\u003etype\u003c/span\u003e Indexer \u003cspan class=\"token keyword\"\u003estruct\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\tdocumentRepository    repository\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eDocumentRepository\n\ttermRepository        repository\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eTermRepository\n\ttokenizer             service\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eTokenizer\n\tinvertIndexCompresser service\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eInvertIndexCompresser\n\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"token keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"token function\"\u003eNewIndexer\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003edocumentRepository repository\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eDocumentRepository\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e termRepository repository\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eTermRepository\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e tokenizer service\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eTokenizer\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e invertIndexCompresser service\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eInvertIndexCompresser\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e service\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eIndexer \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"token keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"token operator\"\u003e\u0026amp;\u003c/span\u003eIndexer\u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003edocumentRepository\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e termRepository\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e tokenizer\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e invertIndexCompresser\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"token keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003eindexer \u003cspan class=\"token operator\"\u003e*\u003c/span\u003eIndexer\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token function\"\u003eIndexingDocument\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx context\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eContext\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e document \u003cspan class=\"token operator\"\u003e*\u003c/span\u003eentities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eDocumentCreate\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token operator\"\u003e*\u003c/span\u003eerrors\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eError \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\n\t\u003cspan class=\"token comment\"\u003e// 文書を単語に分割し、索引対象となる単語を抽出する\u003c/span\u003e\n\ttokenizedContent\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e tokenizeErr \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e indexer\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003etokenizer\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eTokenize\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e document\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eContent\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"token keyword\"\u003eif\u003c/span\u003e tokenizeErr \u003cspan class=\"token operator\"\u003e!=\u003c/span\u003e \u003cspan class=\"token boolean\"\u003enil\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"token keyword\"\u003ereturn\u003c/span\u003e errors\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eNewError\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003etokenizeErr\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eCode\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e tokenizeErr\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eError\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"token comment\"\u003e// 文書(ドキュメント)の新規作成(永続化)\u003c/span\u003e\n\tdocument\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eTokenizedContent \u003cspan class=\"token operator\"\u003e=\u003c/span\u003e \u003cspan class=\"token function\"\u003emake\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token builtin\"\u003estring\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token function\"\u003elen\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003etokenizedContent\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"token keyword\"\u003efor\u003c/span\u003e i\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e term \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e \u003cspan class=\"token keyword\"\u003erange\u003c/span\u003e \u003cspan class=\"token operator\"\u003e*\u003c/span\u003etokenizedContent \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\tdocument\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eTokenizedContent\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003ei\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e \u003cspan class=\"token operator\"\u003e=\u003c/span\u003e term\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eWord\n\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n    \n\tdocumentDetail\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e documentCreateErr \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e indexer\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003edocumentRepository\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eCreateDocument\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e document\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"token keyword\"\u003eif\u003c/span\u003e documentCreateErr \u003cspan class=\"token operator\"\u003e!=\u003c/span\u003e \u003cspan class=\"token boolean\"\u003enil\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"token keyword\"\u003ereturn\u003c/span\u003e errors\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eNewError\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003edocumentCreateErr\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eCode\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e documentCreateErr\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eError\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"token comment\"\u003e// 転置インデックスの作成\u003c/span\u003e\n\twordToPostingMap \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e \u003cspan class=\"token function\"\u003emake\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token keyword\"\u003emap\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token builtin\"\u003estring\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003eentities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003ePosting\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"token keyword\"\u003efor\u003c/span\u003e position\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e word \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e \u003cspan class=\"token keyword\"\u003erange\u003c/span\u003e document\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eTokenizedContent \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"token keyword\"\u003eif\u003c/span\u003e \u003cspan class=\"token boolean\"\u003e_\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e ok \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e wordToPostingMap\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003eword\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e;\u003c/span\u003e ok \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\t\twordToPostingMap\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003eword\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003ePositionsInDocument \u003cspan class=\"token operator\"\u003e=\u003c/span\u003e \u003cspan class=\"token function\"\u003eappend\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ewordToPostingMap\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003eword\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003ePositionsInDocument\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e position\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e \u003cspan class=\"token keyword\"\u003eelse\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\t\tpositionsInDocument \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token builtin\"\u003eint\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003eposition\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\t\t\twordToPostingMap\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003eword\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e \u003cspan class=\"token operator\"\u003e=\u003c/span\u003e entities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eNewPosting\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003edocumentDetail\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eId\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e positionsInDocument\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\n\ttermCompresseds\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e termErr \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e indexer\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003etermRepository\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eFindTermCompressedsByWords\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token operator\"\u003e\u0026amp;\u003c/span\u003edocument\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eTokenizedContent\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"token keyword\"\u003eif\u003c/span\u003e termErr \u003cspan class=\"token operator\"\u003e!=\u003c/span\u003e \u003cspan class=\"token boolean\"\u003enil\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"token keyword\"\u003ereturn\u003c/span\u003e errors\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eNewError\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003edocumentCreateErr\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eCode\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e termErr\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eError\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\tterms \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e \u003cspan class=\"token function\"\u003emake\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003eentities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eTermCreate\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token function\"\u003elen\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003etermCompresseds\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\twordToTermsMap \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e \u003cspan class=\"token function\"\u003emake\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token keyword\"\u003emap\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token builtin\"\u003estring\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003eentities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eTermCreate\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"token keyword\"\u003efor\u003c/span\u003e i\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e termCompressed \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e \u003cspan class=\"token keyword\"\u003erange\u003c/span\u003e \u003cspan class=\"token operator\"\u003e*\u003c/span\u003etermCompresseds \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\tinvertIndex\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e decompressErr \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e indexer\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003einvertIndexCompresser\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eDecompress\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e termCompressed\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eInvertIndexCompressed\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\t\u003cspan class=\"token keyword\"\u003eif\u003c/span\u003e decompressErr \u003cspan class=\"token operator\"\u003e!=\u003c/span\u003e \u003cspan class=\"token boolean\"\u003enil\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\t\t\u003cspan class=\"token function\"\u003epanic\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003edecompressErr\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\t\tterms\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003ei\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eWord \u003cspan class=\"token operator\"\u003e=\u003c/span\u003e termCompressed\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eWord\n\t\tterms\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003ei\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eInvertIndex \u003cspan class=\"token operator\"\u003e=\u003c/span\u003e invertIndex\n\t\twordToTermsMap\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003etermCompressed\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eWord\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e \u003cspan class=\"token operator\"\u003e=\u003c/span\u003e \u003cspan class=\"token operator\"\u003e\u0026amp;\u003c/span\u003eterms\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003ei\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\n\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\n\t\u003cspan class=\"token keyword\"\u003efor\u003c/span\u003e wordInDocument\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e posting \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e \u003cspan class=\"token keyword\"\u003erange\u003c/span\u003e wordToPostingMap \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"token keyword\"\u003eif\u003c/span\u003e \u003cspan class=\"token boolean\"\u003e_\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e ok \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e wordToTermsMap\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003ewordInDocument\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e;\u003c/span\u003e ok \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\t\t\u003cspan class=\"token operator\"\u003e*\u003c/span\u003ewordToTermsMap\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003ewordInDocument\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eInvertIndex\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003ePostingList \u003cspan class=\"token operator\"\u003e=\u003c/span\u003e \u003cspan class=\"token function\"\u003eappend\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003ewordToTermsMap\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003ewordInDocument\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eInvertIndex\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003ePostingList\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token operator\"\u003e*\u003c/span\u003eposting\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e \u003cspan class=\"token keyword\"\u003eelse\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\t\tinvertIndex \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e entities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eNewInvertIndex\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token operator\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003eentities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003ePosting\u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003eposting\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\t\twordToTermsMap\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003ewordInDocument\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e \u003cspan class=\"token operator\"\u003e=\u003c/span\u003e entities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eNewTermCreate\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ewordInDocument\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e invertIndex\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\n\tupsertTermCompresseds \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e \u003cspan class=\"token operator\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003eentities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eTermCompressedCreate\u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\t\u003cspan class=\"token keyword\"\u003efor\u003c/span\u003e wordInDocument \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e \u003cspan class=\"token keyword\"\u003erange\u003c/span\u003e wordToTermsMap \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\tinvertIndexCompressed\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e compressErr \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e indexer\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003einvertIndexCompresser\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eCompress\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e wordToTermsMap\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003ewordInDocument\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eInvertIndex\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token comment\"\u003e// 転置インデックスの圧縮\u003c/span\u003e\n\t\t\u003cspan class=\"token keyword\"\u003eif\u003c/span\u003e compressErr \u003cspan class=\"token operator\"\u003e!=\u003c/span\u003e \u003cspan class=\"token boolean\"\u003enil\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e \n\t\t\t\u003cspan class=\"token function\"\u003epanic\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ecompressErr\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\t\ttermCompressed \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e entities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eNewTermCompressedCreate\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ewordInDocument\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e invertIndexCompressed\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\t\u003cspan class=\"token operator\"\u003e*\u003c/span\u003eupsertTermCompresseds \u003cspan class=\"token operator\"\u003e=\u003c/span\u003e \u003cspan class=\"token function\"\u003eappend\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003eupsertTermCompresseds\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token operator\"\u003e*\u003c/span\u003etermCompressed\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\n\t\u003cspan class=\"token comment\"\u003e// 転置インデックスの新規登録 もしくは 更新(永続化)\u003c/span\u003e\n\tupsertErr \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e indexer\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003etermRepository\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eBulkUpsertTerm\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e upsertTermCompresseds\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"token keyword\"\u003eif\u003c/span\u003e upsertErr \u003cspan class=\"token operator\"\u003e!=\u003c/span\u003e \u003cspan class=\"token boolean\"\u003enil\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"token keyword\"\u003ereturn\u003c/span\u003e errors\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eNewError\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ecode\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eUnknown\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e upsertErr\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\n\t\u003cspan class=\"token keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"token boolean\"\u003enil\u003c/span\u003e\n\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以上がインデクサの実装(Indexer)の説明になります。\u003c/p\u003e\n\u003ch1 id=\"6.%E3%82%B5%E3%83%BC%E3%83%81%E3%83%A3%E3%81%AE%E5%AE%9F%E8%A3%85(searcher)\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#6.%E3%82%B5%E3%83%BC%E3%83%81%E3%83%A3%E3%81%AE%E5%AE%9F%E8%A3%85(searcher)\" aria-hidden=\"true\"\u003e\u003c/a\u003e 6.サーチャの実装(Searcher)\u003c/h1\u003e\n\u003cp\u003e次に\u003cstrong\u003eユーザからの情報要求(検索ワード)から該当する文書を関連度が高い方から降順にソートして取得する、すなわち、全文検索エンジンの肝である検索機能が実装されたサーチャ\u003c/strong\u003eに関する説明です。サーチャは\u003ca href=\"https://github.com/YadaYuki/omochi/blob/master/pkg/infrastructure/searcher/searcher.go#L15-L21\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eSearcher\u003c/a\u003eというGoの構造体で実装されています。\u003ca href=\"https://github.com/YadaYuki/omochi/blob/master/pkg/infrastructure/searcher/searcher.go#L27\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eSearcher.Search\u003c/a\u003e関数を実行することによって検索を実行することが可能です。\u003c/p\u003e\n\u003cp\u003eSearcher.Searchは以下のような\u003ca href=\"https://github.com/YadaYuki/omochi/blob/master/pkg/domain/entities/query.go#L10\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eQuery\u003c/a\u003e型のデータを引数として受け取ります。\u003c/p\u003e\n\u003cdiv class=\"code-block-container\"\u003e\u003cpre class=\"language-go\"\u003e\u003ccode class=\"language-go\"\u003e\u003cspan class=\"token keyword\"\u003etype\u003c/span\u003e SearchModeType \u003cspan class=\"token builtin\"\u003estring\u003c/span\u003e\n\n\u003cspan class=\"token keyword\"\u003econst\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\n\tAnd SearchModeType \u003cspan class=\"token operator\"\u003e=\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"And\"\u003c/span\u003e\n\tOr  SearchModeType \u003cspan class=\"token operator\"\u003e=\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"Or\"\u003c/span\u003e\n\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"token keyword\"\u003etype\u003c/span\u003e Query \u003cspan class=\"token keyword\"\u003estruct\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\tKeywords   \u003cspan class=\"token operator\"\u003e*\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token builtin\"\u003estring\u003c/span\u003e      \u003cspan class=\"token string\"\u003e`json:\"keywords\"`\u003c/span\u003e\n\tSearchMode SearchModeType \u003cspan class=\"token string\"\u003e`json:\"mode\"`\u003c/span\u003e \u003cspan class=\"token comment\"\u003e// And,Or\u003c/span\u003e\n\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eフィールドである\u003ccode\u003eSearchMode\u003c/code\u003eには\u003ccode\u003eAnd\u003c/code\u003eもしくは\u003ccode\u003eOr\u003c/code\u003eを指定することが可能です。これにより\u003ccode\u003ekeywords\u003c/code\u003e配列内の単語を全て含む文書を検索するか(And検索)、少なくとも\u003ccode\u003ekeywords\u003c/code\u003e配列内の単語のいずれか一つを含む文書を検索するか(Or検索)を切り替えています。\u003c/p\u003e\n\u003cp\u003eSearcher.Search関数内では、\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e圧縮済み転置インデックス(InvertIndexCompressed)の取得\u003c/li\u003e\n\u003cli\u003e転置インデックスの解凍\u003c/li\u003e\n\u003cli\u003e転置インデックスに登録されている文書IDに該当する文書群のデータ取得\u003c/li\u003e\n\u003cli\u003e取得した文書群の関連度に応じた並び替え(検索ワードが1語であった場合のみ)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eという4つの処理を内部的に実装行っています。\u003c/p\u003e\n\u003cp\u003eSearcher.Search関数の内部処理が概観できたところで、\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eインメモリ転置インデックス\u003c/li\u003e\n\u003cli\u003e文書のスコアリング\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eという2点について補足説明を行なっていきます。\u003c/p\u003e\n\u003ch3 id=\"%E3%82%A4%E3%83%B3%E3%83%A1%E3%83%A2%E3%83%AA%E8%BB%A2%E7%BD%AE%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#%E3%82%A4%E3%83%B3%E3%83%A1%E3%83%A2%E3%83%AA%E8%BB%A2%E7%BD%AE%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9\" aria-hidden=\"true\"\u003e\u003c/a\u003e インメモリ転置インデックス\u003c/h3\u003e\n\u003cp\u003e検索エンジンでは、検索処理の高速化のための工夫として、「文書内で頻出するターム」や「よく検索されるターム」を中心に転置インデックスの一部をストレージ(RDB等)ではなく、インメモリにキャッシュしておくことが一般的です。\u003c/p\u003e\n\u003cp\u003eOmochiでは、Searcher構造体に\u003ccode\u003einvertIndexCached\u003c/code\u003eというmap型(key:ターム(単語),value:転置インデックス)のフィールドを用意することでそれを実現しました。\u003c/p\u003e\n\u003cdiv class=\"code-block-container\"\u003e\u003cpre class=\"language-go\"\u003e\u003ccode class=\"language-go\"\u003e\u003cspan class=\"token keyword\"\u003epackage\u003c/span\u003e searcher\n\n\u003cspan class=\"token operator\"\u003e...\u003c/span\u003e\n\n\u003cspan class=\"token keyword\"\u003etype\u003c/span\u003e Searcher \u003cspan class=\"token keyword\"\u003estruct\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\tinvertIndexCached  \u003cspan class=\"token keyword\"\u003emap\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token builtin\"\u003estring\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003eentities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eInvertIndex \u003cspan class=\"token comment\"\u003e// 転置インデックスの一部をインメモリで格納するための辞書型変数\u003c/span\u003e\n\t\u003cspan class=\"token operator\"\u003e...\u003c/span\u003e\n\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eSearcher.Search\u003c/code\u003e関数では、検索ワードに該当する転置インデックスを取得する際、いきなりストレージには問い合わせず、まず、\u003ccode\u003einvertIndexCached\u003c/code\u003e内に、該当する転置インデックスが存在しないかをチェックしています。\u003c/p\u003e\n\u003ch3 id=\"%E6%96%87%E6%9B%B8%E3%81%AE%E3%82%B9%E3%82%B3%E3%82%A2%E3%83%AA%E3%83%B3%E3%82%B0\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#%E6%96%87%E6%9B%B8%E3%81%AE%E3%82%B9%E3%82%B3%E3%82%A2%E3%83%AA%E3%83%B3%E3%82%B0\" aria-hidden=\"true\"\u003e\u003c/a\u003e 文書のスコアリング\u003c/h3\u003e\n\u003cp\u003eGoogleをはじめとする検索エンジンでは、独自のアルゴリズムにより、検索ワードに対する文書の関連度を算出し、関連度が高いものから順番に検索結果を提示しています。\u003c/p\u003e\n\u003cp\u003e現時点の、Omochiは検索ワードが1語であった場合のみ、関連度に応じて検索結果となる文書が並び替えられるように実装されています。関連度の算出には、TF-IDFを採用しました。\u003c/p\u003e\n\u003csection class=\"zenn-katex\"\u003e\u003ceqn\u003e\u003cembed-katex display-mode=\"1\"\u003eTF_i(t) = freq(t,d_i)\u003c/embed-katex\u003e\u003c/eqn\u003e\u003c/section\u003e\n\u003csection class=\"zenn-katex\"\u003e\u003ceqn\u003e\u003cembed-katex display-mode=\"1\"\u003eIDF(t) = log((1+n)/(1+df_t))\u003c/embed-katex\u003e\u003c/eqn\u003e\u003c/section\u003e\n\u003csection class=\"zenn-katex\"\u003e\u003ceqn\u003e\u003cembed-katex display-mode=\"1\"\u003eTF\\verb|-|IDF_i(t) = TF_i(t) * (IDF(t) + 1)\u003c/embed-katex\u003e\u003c/eqn\u003e\u003c/section\u003e\n\u003cp\u003eTF-IDFによる文書の並び替えは、\u003ca href=\"https://github.com/YadaYuki/omochi/blob/yadayuki/add-readme/pkg/infrastructure/documentranker/tfidfranker/tf_idf_document_ranker.go#L14\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eTfIdfDocumentRanker\u003c/a\u003eという構造体で実装されています。長くなるためここには掲載しませんが、興味がある方はぜひ見てみてください。\u003c/p\u003e\n\u003cp\u003e以上の2点を踏まえて、Searcherの実装を見てみましょう。\u003c/p\u003e\n\u003cdiv class=\"code-block-container\"\u003e\u003cpre class=\"language-go\"\u003e\u003ccode class=\"language-go\"\u003e\u003cspan class=\"token keyword\"\u003epackage\u003c/span\u003e searcher\n\n\u003cspan class=\"token keyword\"\u003eimport\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\n\t\u003cspan class=\"token string\"\u003e\"context\"\u003c/span\u003e\n\t\u003cspan class=\"token string\"\u003e\"fmt\"\u003c/span\u003e\n\t\u003cspan class=\"token string\"\u003e\"log\"\u003c/span\u003e\n\n\t\u003cspan class=\"token string\"\u003e\"github.com/YadaYuki/omochi/pkg/domain/entities\"\u003c/span\u003e\n\t\u003cspan class=\"token string\"\u003e\"github.com/YadaYuki/omochi/pkg/domain/repository\"\u003c/span\u003e\n\t\u003cspan class=\"token string\"\u003e\"github.com/YadaYuki/omochi/pkg/domain/service\"\u003c/span\u003e\n\t\u003cspan class=\"token string\"\u003e\"github.com/YadaYuki/omochi/pkg/errors\"\u003c/span\u003e\n\t\u003cspan class=\"token string\"\u003e\"github.com/YadaYuki/omochi/pkg/errors/code\"\u003c/span\u003e\n\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"token keyword\"\u003etype\u003c/span\u003e Searcher \u003cspan class=\"token keyword\"\u003estruct\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\tinvertIndexCached  \u003cspan class=\"token keyword\"\u003emap\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token builtin\"\u003estring\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003eentities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eInvertIndex\n\ttermRepository     repository\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eTermRepository\n\tdocumentRepository repository\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eDocumentRepository\n\tcompresser         service\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eInvertIndexCompresser\n\tdocumentRanker     service\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eDocumentRanker\n\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"token keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"token function\"\u003eNewSearcher\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003einvertIndexCached \u003cspan class=\"token keyword\"\u003emap\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token builtin\"\u003estring\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003eentities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eInvertIndex\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e termRepository repository\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eTermRepository\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e documentRepository repository\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eDocumentRepository\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e compresser service\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eInvertIndexCompresser\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e documentRanker service\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eDocumentRanker\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e service\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eSearcher \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"token keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"token operator\"\u003e\u0026amp;\u003c/span\u003eSearcher\u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003einvertIndexCached\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e termRepository\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e documentRepository\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e compresser\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e documentRanker\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"token keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003es \u003cspan class=\"token operator\"\u003e*\u003c/span\u003eSearcher\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token function\"\u003eSearch\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx context\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eContext\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e query \u003cspan class=\"token operator\"\u003e*\u003c/span\u003eentities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eQuery\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003eentities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eDocument\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token operator\"\u003e*\u003c/span\u003eerrors\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eError\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\n\t\u003cspan class=\"token keyword\"\u003eif\u003c/span\u003e \u003cspan class=\"token function\"\u003elen\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003equery\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eKeywords\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token operator\"\u003e==\u003c/span\u003e \u003cspan class=\"token number\"\u003e1\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"token keyword\"\u003ereturn\u003c/span\u003e s\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003esearchBySingleKeyword\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e query\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\t\u003cspan class=\"token keyword\"\u003eswitch\u003c/span\u003e query\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eSearchMode \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e \u003cspan class=\"token comment\"\u003e// SearchModeによる条件分岐\u003c/span\u003e\n\t\u003cspan class=\"token keyword\"\u003ecase\u003c/span\u003e entities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eOr\u003cspan class=\"token punctuation\"\u003e:\u003c/span\u003e\n\t\t\u003cspan class=\"token keyword\"\u003ereturn\u003c/span\u003e s\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003esearchOr\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e query\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\n\t\u003cspan class=\"token keyword\"\u003ecase\u003c/span\u003e entities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eAnd\u003cspan class=\"token punctuation\"\u003e:\u003c/span\u003e\n\t\t\u003cspan class=\"token keyword\"\u003ereturn\u003c/span\u003e s\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003esearchAnd\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e query\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\n\t\u003cspan class=\"token keyword\"\u003edefault\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e:\u003c/span\u003e\n\t\t\u003cspan class=\"token keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"token boolean\"\u003enil\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e errors\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eNewError\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ecode\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eUnknown\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e fmt\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token string\"\u003e\"unsupported search mode: %s\"\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e query\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eSearchMode\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"token keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003es \u003cspan class=\"token operator\"\u003e*\u003c/span\u003eSearcher\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token function\"\u003esearchBySingleKeyword\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx context\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eContext\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e query \u003cspan class=\"token operator\"\u003e*\u003c/span\u003eentities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eQuery\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003eentities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eDocument\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token operator\"\u003e*\u003c/span\u003eerrors\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eError\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\tinvertIndex\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e ok \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e s\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003einvertIndexCached\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003equery\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eKeywords\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token number\"\u003e0\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e \u003cspan class=\"token comment\"\u003e// インメモリの転置インデックスをチェック\u003c/span\u003e\n\t\u003cspan class=\"token keyword\"\u003eif\u003c/span\u003e \u003cspan class=\"token operator\"\u003e!\u003c/span\u003eok \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\ttermCompressed\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e err \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e s\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003etermRepository\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eFindTermCompressedByWord\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003equery\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eKeywords\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token number\"\u003e0\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token comment\"\u003e// 圧縮済み転置インデックス(InvertIndexCompressed)の取得\u003c/span\u003e\n\t\t\u003cspan class=\"token keyword\"\u003eif\u003c/span\u003e err \u003cspan class=\"token operator\"\u003e!=\u003c/span\u003e \u003cspan class=\"token boolean\"\u003enil\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\t\t\u003cspan class=\"token keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"token boolean\"\u003enil\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e errors\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eNewError\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003eerr\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eCode\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e err\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\t\tinvertIndexCompressed \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e termCompressed\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eInvertIndexCompressed\n\t\tinvertIndex\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e err \u003cspan class=\"token operator\"\u003e=\u003c/span\u003e s\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003ecompresser\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eDecompress\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e invertIndexCompressed\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token comment\"\u003e// 転置インデックスの解凍\u003c/span\u003e\n\t\t\u003cspan class=\"token keyword\"\u003eif\u003c/span\u003e err \u003cspan class=\"token operator\"\u003e!=\u003c/span\u003e \u003cspan class=\"token boolean\"\u003enil\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\t\t\u003cspan class=\"token keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"token boolean\"\u003enil\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e errors\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eNewError\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003eerr\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eCode\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e err\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\n\tdocumentIds \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token builtin\"\u003eint64\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\t\u003cspan class=\"token keyword\"\u003efor\u003c/span\u003e \u003cspan class=\"token boolean\"\u003e_\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e postingList \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e \u003cspan class=\"token keyword\"\u003erange\u003c/span\u003e \u003cspan class=\"token operator\"\u003e*\u003c/span\u003einvertIndex\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003ePostingList \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\tdocumentIds \u003cspan class=\"token operator\"\u003e=\u003c/span\u003e \u003cspan class=\"token function\"\u003eappend\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003edocumentIds\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e postingList\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eDocumentRelatedId\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\n\tdocuments\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e documentErr \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e s\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003edocumentRepository\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eFindDocumentsByIds\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token operator\"\u003e\u0026amp;\u003c/span\u003edocumentIds\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token comment\"\u003e// 転置インデックスに登録されている文書IDに該当する文書群のデータ取得\u003c/span\u003e\n\t\u003cspan class=\"token keyword\"\u003eif\u003c/span\u003e documentErr \u003cspan class=\"token operator\"\u003e!=\u003c/span\u003e \u003cspan class=\"token boolean\"\u003enil\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"token keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"token boolean\"\u003enil\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e errors\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eNewError\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003edocumentErr\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eCode\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e documentErr\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\tsortedDocument\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e sortErr \u003cspan class=\"token operator\"\u003e:=\u003c/span\u003e s\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003edocumentRanker\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eSortDocumentByScore\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003equery\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eKeywords\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token number\"\u003e0\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e documents\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token comment\"\u003e// 取得した文書群の関連度に応じた並び替え\u003c/span\u003e\n\t\u003cspan class=\"token keyword\"\u003eif\u003c/span\u003e sortErr \u003cspan class=\"token operator\"\u003e!=\u003c/span\u003e \u003cspan class=\"token boolean\"\u003enil\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"token keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"token boolean\"\u003enil\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e errors\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token function\"\u003eNewError\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003esortErr\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eCode\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e sortErr\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\t\u003cspan class=\"token keyword\"\u003ereturn\u003c/span\u003e sortedDocument\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token boolean\"\u003enil\u003c/span\u003e\n\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"token keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003es \u003cspan class=\"token operator\"\u003e*\u003c/span\u003eSearcher\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token function\"\u003esearchOr\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx context\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eContext\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e query \u003cspan class=\"token operator\"\u003e*\u003c/span\u003eentities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eQuery\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003eentities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eDocument\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token operator\"\u003e*\u003c/span\u003eerrors\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eError\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"token operator\"\u003e...\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003eOR検索の実装\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"token keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003es \u003cspan class=\"token operator\"\u003e*\u003c/span\u003eSearcher\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token function\"\u003esearchAnd\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003ectx context\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eContext\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e query \u003cspan class=\"token operator\"\u003e*\u003c/span\u003eentities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eQuery\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e(\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\u003cspan class=\"token operator\"\u003e*\u003c/span\u003eentities\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eDocument\u003cspan class=\"token punctuation\"\u003e,\u003c/span\u003e \u003cspan class=\"token operator\"\u003e*\u003c/span\u003eerrors\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003eError\u003cspan class=\"token punctuation\"\u003e)\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"token operator\"\u003e...\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e.\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003eAND検索の実装\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以上がサーチャの実装(Searcher)の説明になります。\u003c/p\u003e\n\u003ch1 id=\"7.%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D%E3%83%BB%E3%83%87%E3%83%A2\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#7.%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D%E3%83%BB%E3%83%87%E3%83%A2\" aria-hidden=\"true\"\u003e\u003c/a\u003e 7.動作確認・デモ\u003c/h1\u003e\n\u003ch2 id=\"7.1-%E4%BA%8B%E5%89%8D%E6%BA%96%E5%82%99\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#7.1-%E4%BA%8B%E5%89%8D%E6%BA%96%E5%82%99\" aria-hidden=\"true\"\u003e\u003c/a\u003e 7.1 事前準備\u003c/h2\u003e\n\u003cp\u003e本章では、数千件〜数万件程度のテストデータを用いて、実際にOmochiによる全文検索を試していきます。リポジトリ内には、Omochiが対応する言語である日本語と英語のそれぞれに対して、テストデータを用意しました。\u003c/p\u003e\n\u003cp\u003e日本語のテストデータとしては、本記事の筆者が最も愛する漫画の一つである「\u003ca href=\"https://dora-world.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eドラえもん\u003c/a\u003e」のコミックタイトル(1,316件)を使用させていただきます。(英語のテストデータには\u003ca href=\"https://www.kaggle.com/datasets/rounakbanik/the-movies-dataset\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e45,466件の映画タイトルのデータセット\u003c/a\u003eを使用させていただきました。)\u003c/p\u003e\n\u003cp\u003eここでは、例として、日本語のデータセットを用いた検索の動作確認を行います。\u003c/p\u003e\n\u003cp\u003e検索を実行していく前に事前準備として、\u003ca href=\"https://github.com/YadaYuki/omochi/blob/master/cmd/seeds/data/ja/doraemon.tsv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eTSVファイルで用意されている文書のテストデータ(ドラえもんのコミックタイトル)\u003c/a\u003eをインデクサにより、検索エンジンに登録します。\u003c/p\u003e\n\u003cp\u003eREADME.mdの「Setup」の章に書かれた手順により、Dockerのネットワーク作成やDBのマイグレーション等は終えている想定で、\u003ccode\u003eapi\u003c/code\u003eコンテナ内部で以下を実行します。\u003c/p\u003e\n\u003cdiv class=\"code-block-container\"\u003e\u003cpre\u003e\u003ccode\u003e$ go run ./cmd/seeds/ja/seed.go\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e上のコマンドを実行すると、検索エンジンにTSV上のドラえもんコミックタイトルが、検索対象の文書として並行に登録されていきます。\u003c/p\u003e\n\u003cp\u003e上手く検索エンジンへの登録が実行できた場合、以下のような出力が得られます。\u003c/p\u003e\n\u003cdiv class=\"code-block-container\"\u003e\u003cpre\u003e\u003ccode\u003e$ go run ./cmd/seeds/ja/seed.go \n2022/07/23 19:50:57 start indexing documents\n2022/07/23 19:50:57 indexed: 「真実の旗印」はつねに正しい\n2022/07/23 19:50:57 indexed: 石ころぼうし\n2022/07/23 19:50:57 indexed: ドラえもんあげる\n2022/07/23 19:50:57 indexed: 空とぶ荷ふだ\n2022/07/23 19:50:57 indexed: メモリーディスク\n2022/07/23 19:50:57 indexed: 動物指キャップ\n2022/07/23 19:50:57 indexed: ドラえもんがやってきた\n....\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以上で、デモのための事前準備は完了です！\u003c/p\u003e\n\u003ch2 id=\"7.2-%E3%83%89%E3%83%A9%E3%81%88%E3%82%82%E3%82%93%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%82%AF%E3%82%BF%E3%82%A4%E3%83%88%E3%83%AB%E3%82%92%E6%A4%9C%E7%B4%A2%E3%81%99%E3%82%8B\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#7.2-%E3%83%89%E3%83%A9%E3%81%88%E3%82%82%E3%82%93%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%82%AF%E3%82%BF%E3%82%A4%E3%83%88%E3%83%AB%E3%82%92%E6%A4%9C%E7%B4%A2%E3%81%99%E3%82%8B\" aria-hidden=\"true\"\u003e\u003c/a\u003e 7.2 ドラえもんのコミックタイトルを検索する\u003c/h2\u003e\n\u003cp\u003eさて、長い道のりでしたが、いよいよ検索エンジンを試していきます。\u003c/p\u003e\n\u003cp\u003e既に述べた通り、OmochiはRESTful API経由でキーワード検索を実行することが可能です。\u003ccode\u003e/v1/document/search\u003c/code\u003e に以下の2つのパラメータを付与して、HTTP GETリクエストを送信します。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003e\"keywords\"\u003c/code\u003e\u003c/strong\u003e: 検索ワード. 検索ワードが複数の場合は\u003ccode\u003e\"hoge,fuga,piyo\"\u003c/code\u003eのように\",\"(カンマ)区切りで指定する\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003e\"mode\"\u003c/code\u003e\u003c/strong\u003e: 検索モード. \u003ccode\u003e\"And\"\u003c/code\u003e もしくは \u003ccode\u003e\"Or\"\u003c/code\u003e が指定可能(Optional)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003ecurl\u003c/code\u003eコマンドにより、検索機能の動作確認を行います。まずは、\u003ccode\u003e\"keywords\"=\"ドラえもん\"\u003c/code\u003e,\u003ccode\u003e\"mode\"=null\u003c/code\u003eとして、”ドラえもん”という単語が含まれる文書を検索してみましょう。\u003c/p\u003e\n\u003cdiv class=\"code-block-container\"\u003e\u003cpre class=\"language-bash\"\u003e\u003ccode class=\"language-bash\"\u003e$ \u003cspan class=\"token function\"\u003ecurl\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"http://localhost:8081/v1/document/search?keywords=ドラえもん\"\u003c/span\u003e \u003cspan class=\"token operator\"\u003e|\u003c/span\u003e jq \u003cspan class=\"token builtin class-name\"\u003e.\u003c/span\u003e\n\u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"token string\"\u003e\"documents\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\n    \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"token string\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token number\"\u003e3492\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"content\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"ドラえもんの歌\"\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"tokenized_content\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\n        \u003cspan class=\"token string\"\u003e\"ドラえもん\"\u003c/span\u003e,\n        \u003cspan class=\"token string\"\u003e\"歌\"\u003c/span\u003e\n      \u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"created_at\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"2022-07-23T19:56:22+09:00\"\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"updated_at\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"2022-07-23T19:56:22+09:00\"\u003c/span\u003e\n    \u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e,\n    \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"token string\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token number\"\u003e3250\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"content\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"ドラえもんだらけ\"\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"tokenized_content\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\n        \u003cspan class=\"token string\"\u003e\"ドラえもん\"\u003c/span\u003e,\n        \u003cspan class=\"token string\"\u003e\"だらけ\"\u003c/span\u003e\n      \u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"created_at\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"2022-07-23T19:56:21+09:00\"\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"updated_at\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"2022-07-23T19:56:21+09:00\"\u003c/span\u003e\n    \u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e,\n    \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"token string\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token number\"\u003e2691\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"content\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"ドラえもん登場！\"\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"tokenized_content\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\n        \u003cspan class=\"token string\"\u003e\"ドラえもん\"\u003c/span\u003e,\n        \u003cspan class=\"token string\"\u003e\"登場\"\u003c/span\u003e\n      \u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"created_at\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"2022-07-23T19:56:18+09:00\"\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"updated_at\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"2022-07-23T19:56:18+09:00\"\u003c/span\u003e\n    \u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e,\n    \u003cspan class=\"token punctuation\"\u003e..\u003c/span\u003e\u003cspan class=\"token punctuation\"\u003e..\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e「ドラえもんの歌」,「ドラえもんだらけ」...など、\"ドラえもん\"という単語を含む文書のみを正しく検索できていることがわかります。\u003c/p\u003e\n\u003cp\u003e次に、And検索を試してみます。\u003ccode\u003e\"keywords\"=\"のび太,ジャイアン\"\u003c/code\u003e,\u003ccode\u003e\"mode\"=And\u003c/code\u003eとして、”のび太”と”ジャイアン”という単語が両方含まれる文書を検索してみましょう。\u003c/p\u003e\n\u003cdiv class=\"code-block-container\"\u003e\u003cpre class=\"language-bash\"\u003e\u003ccode class=\"language-bash\"\u003e$ \u003cspan class=\"token function\"\u003ecurl\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"http://localhost:8081/v1/document/search?keywords=ジャイアン,のび太\u0026amp;mode=And\"\u003c/span\u003e \u003cspan class=\"token operator\"\u003e|\u003c/span\u003e jq \u003cspan class=\"token builtin class-name\"\u003e.\u003c/span\u003e \n\u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"token string\"\u003e\"documents\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\n    \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"token string\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token number\"\u003e3336\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"content\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"ジャイアン反省・のび太はめいわく　\"\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"tokenized_content\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\n        \u003cspan class=\"token string\"\u003e\"ジャイアン\"\u003c/span\u003e,\n        \u003cspan class=\"token string\"\u003e\"反省\"\u003c/span\u003e,\n        \u003cspan class=\"token string\"\u003e\"のび太\"\u003c/span\u003e,\n        \u003cspan class=\"token string\"\u003e\"めいわく\"\u003c/span\u003e\n      \u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"created_at\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"2022-07-23T19:56:21+09:00\"\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"updated_at\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"2022-07-23T19:56:21+09:00\"\u003c/span\u003e\n    \u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e\n\u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e検索結果としては、一つのみですが、”のび太”と”ジャイアン”の両方を含む文書を正しく検索できていることがわかります。\u003c/p\u003e\n\u003cp\u003e最後に、Or検索です。\u003ccode\u003e\"keywords\"=\"のび太,ジャイアン\"\u003c/code\u003e(Andと同じ),\u003ccode\u003e\"mode\"=Or\u003c/code\u003eとして、”のび太”か”ジャイアン”という単語のいずれかが含まれる文書を検索してみましょう。\u003c/p\u003e\n\u003cdiv class=\"code-block-container\"\u003e\u003cpre class=\"language-bash\"\u003e\u003ccode class=\"language-bash\"\u003e$ \u003cspan class=\"token function\"\u003ecurl\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"http://localhost:8081/v1/document/search?keywords=ジャイアン,のび太\u0026amp;mode=Or\"\u003c/span\u003e \u003cspan class=\"token operator\"\u003e|\u003c/span\u003e jq \u003cspan class=\"token builtin class-name\"\u003e.\u003c/span\u003e \n\u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"token string\"\u003e\"documents\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\n    \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"token string\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token number\"\u003e2707\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"content\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"ジャイアンよい子だねんねしな\"\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"tokenized_content\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\n        \u003cspan class=\"token string\"\u003e\"ジャイアン\"\u003c/span\u003e,\n        \u003cspan class=\"token string\"\u003e\"よい\"\u003c/span\u003e,\n        \u003cspan class=\"token string\"\u003e\"子\"\u003c/span\u003e,\n        \u003cspan class=\"token string\"\u003e\"ねんね\"\u003c/span\u003e,\n        \u003cspan class=\"token string\"\u003e\"しな\"\u003c/span\u003e\n      \u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"created_at\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"2022-07-23T19:56:18+09:00\"\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"updated_at\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"2022-07-23T19:56:18+09:00\"\u003c/span\u003e\n    \u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e,\n    \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"token string\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token number\"\u003e2720\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"content\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"のび太のブラックホール\"\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"tokenized_content\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\n        \u003cspan class=\"token string\"\u003e\"のび太\"\u003c/span\u003e,\n        \u003cspan class=\"token string\"\u003e\"ブラックホール\"\u003c/span\u003e\n      \u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"created_at\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"2022-07-23T19:56:18+09:00\"\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"updated_at\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"2022-07-23T19:56:18+09:00\"\u003c/span\u003e\n    \u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e,\n    \u003cspan class=\"token punctuation\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"token string\"\u003e\"id\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token number\"\u003e2729\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"content\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"のび太が消えちゃう？\"\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"tokenized_content\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token punctuation\"\u003e[\u003c/span\u003e\n        \u003cspan class=\"token string\"\u003e\"のび太\"\u003c/span\u003e,\n        \u003cspan class=\"token string\"\u003e\"消え\"\u003c/span\u003e,\n        \u003cspan class=\"token string\"\u003e\"ちゃう\"\u003c/span\u003e\n      \u003cspan class=\"token punctuation\"\u003e]\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"created_at\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"2022-07-23T19:56:18+09:00\"\u003c/span\u003e,\n      \u003cspan class=\"token string\"\u003e\"updated_at\"\u003c/span\u003e\u003cspan class=\"token builtin class-name\"\u003e:\u003c/span\u003e \u003cspan class=\"token string\"\u003e\"2022-07-23T19:56:18+09:00\"\u003c/span\u003e\n    \u003cspan class=\"token punctuation\"\u003e}\u003c/span\u003e,\n    \u003cspan class=\"token punctuation\"\u003e..\u003c/span\u003e. \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e「ジャイアンよい子だねんねしな」,「のび太のブラックホール」... など、”のび太”か”ジャイアン”のいずれかが含まれる文書が正しく検索できていることが確認できます。\u003c/p\u003e\n\u003ch1 id=\"8.%E3%81%BE%E3%81%A8%E3%82%81\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#8.%E3%81%BE%E3%81%A8%E3%82%81\" aria-hidden=\"true\"\u003e\u003c/a\u003e 8.まとめ\u003c/h1\u003e\n\u003cp\u003e長くなりましたが、以上が実装の説明になります。\u003c/p\u003e\n\u003cp\u003e今回実装した検索エンジンOmochiはリポジトリに\u003cstrong\u003eJust a toy\u003c/strong\u003eと書かれている通り、Elasticsearch等の既存のツールを活用した検索エンジンと比較するとパフォーマンスや機能性の面で実用性は低いです。\u003c/p\u003e\n\u003cp\u003eしかし、Omochiようなの最小限の機能のみを持つ検索エンジンを実装する作業は、転置インデックスをはじめとする情報検索の基礎知識を理解する上で大きな助けとなりました。\u003c/p\u003e\n\u003cp\u003e本記事を読んだ方の中で、Omochiを気に入ってもらえれば、\u003ca href=\"https://github.com/YadaYuki/omochi/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eリポジトリ\u003c/a\u003eにstarをつけてもらえると励みになります。\u003c/p\u003e\n\u003ch1 id=\"9.%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\"\u003e\n\u003ca class=\"header-anchor-link\" href=\"#9.%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\" aria-hidden=\"true\"\u003e\u003c/a\u003e 9.参考文献\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/Information-Retrieval-Implementing-Evaluating-Engines/dp/0262026511\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eInformation Retrieval: Implementing and Evaluating Search Engines\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/%E6%83%85%E5%A0%B1%E6%A4%9C%E7%B4%A2%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0-%E5%8C%97-%E7%A0%94%E4%BA%8C/dp/4320120361/ref=pd_lpo_3?pd_rd_i=4320120361\u0026amp;psc=1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e情報検索アルゴリズム\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/Python%E3%81%A7%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B-%E6%83%85%E5%A0%B1%E6%A4%9C%E7%B4%A2%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0-%E4%BD%90%E8%97%A4-%E9%80%B2%E4%B9%9F/dp/4627818610\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003ePythonではじめる 情報検索プログラミング\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/WEB-DB-PRESS-Vol-126-%E7%9C%9F%E5%A3%81/dp/4297125390\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003eWEB+DB PRESS Vol.126. 特集 Goで作って学ぶ検索エンジン\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/%E6%A4%9C%E7%B4%A2%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3%E8%87%AA%E4%BD%9C%E5%85%A5%E9%96%80-%E6%89%8B%E3%82%92%E5%8B%95%E3%81%8B%E3%81%97%E3%81%AA%E3%81%8C%E3%82%89%E8%A6%8B%E6%B8%A1%E3%81%99%E6%A4%9C%E7%B4%A2%E3%81%AE%E8%88%9E%E5%8F%B0%E8%A3%8F-%E5%B1%B1%E7%94%B0-%E6%B5%A9%E4%B9%8B/dp/4774167533\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e検索エンジン自作入門 ~手を動かしながら見渡す検索の舞台裏\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n",
    "og_image_url": "https://res.cloudinary.com/zenn/image/upload/s--k_F77cGj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%25E8%25A3%25BD%25E3%2581%25AE%25E5%2585%25A8%25E6%2596%2587%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3Omochi%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F.%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259F%25A2%25E7%2594%25B0%25E5%25AE%2599%25E7%2594%259F%2520%252F%2520Yada%2520Yuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmZTVmOWE3YTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
    "toc": [
      {
        "id": "1.%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB",
        "text": "1.はじめに",
        "level": 1,
        "children": []
      },
      {
        "id": "2.%E8%BB%A2%E7%BD%AE%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E5%9E%8B%E3%83%BB%E5%85%A8%E6%96%87%E6%A4%9C%E7%B4%A2%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3omochi",
        "text": "2.転置インデックス型・全文検索エンジンOmochi",
        "level": 1,
        "children": []
      },
      {
        "id": "3-omochi%E3%81%AE%E6%8A%80%E8%A1%93%E9%81%B8%E5%AE%9A",
        "text": "3 Omochiの技術選定",
        "level": 1,
        "children": [
          {
            "id": "4.%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E6%A7%8B%E6%88%90%E6%A6%82%E8%A6%B3(%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E8%A8%AD%E8%A8%88)",
            "text": "4.フォルダ構成概観(アプリケーション設計)",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": "5.%E3%82%A4%E3%83%B3%E3%83%87%E3%82%AF%E3%82%B5%E3%81%AE%E5%AE%9F%E8%A3%85(indexer)",
        "text": "5.インデクサの実装(Indexer)",
        "level": 1,
        "children": [
          {
            "id": "5.1-%E8%BB%A2%E7%BD%AE%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E3%81%A8%E3%81%AF%EF%BC%9F",
            "text": "5.1 転置インデックスとは？",
            "level": 2,
            "children": []
          },
          {
            "id": "5.2-indexer%E3%83%BBindexingdocument%E9%96%A2%E6%95%B0",
            "text": "5.2 Indexer・IndexingDocument関数",
            "level": 2,
            "children": [
              {
                "id": "%E6%96%87%E6%9B%B8%E3%82%92%E3%82%BF%E3%83%BC%E3%83%A0(%E5%8D%98%E8%AA%9E)%E3%81%AB%E5%88%86%E5%89%B2%E3%81%97%E3%80%81%E7%B4%A2%E5%BC%95%E5%AF%BE%E8%B1%A1%E3%81%A8%E3%81%AA%E3%82%8B%E3%82%BF%E3%83%BC%E3%83%A0%E3%82%92%E6%8A%BD%E5%87%BA%E3%81%99%E3%82%8B%E6%89%8B%E6%B3%95",
                "text": "文書をターム(単語)に分割し、索引対象となるタームを抽出する手法",
                "level": 3,
                "children": []
              },
              {
                "id": "%E8%BB%A2%E7%BD%AE%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E3%81%AE%E5%9C%A7%E7%B8%AE%E6%89%8B%E6%B3%95",
                "text": "転置インデックスの圧縮手法",
                "level": 3,
                "children": []
              },
              {
                "id": "%E8%BB%A2%E7%BD%AE%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9(%E5%9C%A7%E7%B8%AE%E6%B8%88%E3%81%BF)%E3%83%BB%E6%96%87%E6%9B%B8%E3%81%AE%E6%B0%B8%E7%B6%9A%E5%8C%96",
                "text": "転置インデックス(圧縮済み)・文書の永続化",
                "level": 3,
                "children": []
              }
            ]
          }
        ]
      },
      {
        "id": "6.%E3%82%B5%E3%83%BC%E3%83%81%E3%83%A3%E3%81%AE%E5%AE%9F%E8%A3%85(searcher)",
        "text": "6.サーチャの実装(Searcher)",
        "level": 1,
        "children": [
          {
            "id": "%E3%82%A4%E3%83%B3%E3%83%A1%E3%83%A2%E3%83%AA%E8%BB%A2%E7%BD%AE%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9",
            "text": "インメモリ転置インデックス",
            "level": 3,
            "children": []
          },
          {
            "id": "%E6%96%87%E6%9B%B8%E3%81%AE%E3%82%B9%E3%82%B3%E3%82%A2%E3%83%AA%E3%83%B3%E3%82%B0",
            "text": "文書のスコアリング",
            "level": 3,
            "children": []
          }
        ]
      },
      {
        "id": "7.%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D%E3%83%BB%E3%83%87%E3%83%A2",
        "text": "7.動作確認・デモ",
        "level": 1,
        "children": [
          {
            "id": "7.1-%E4%BA%8B%E5%89%8D%E6%BA%96%E5%82%99",
            "text": "7.1 事前準備",
            "level": 2,
            "children": []
          },
          {
            "id": "7.2-%E3%83%89%E3%83%A9%E3%81%88%E3%82%82%E3%82%93%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%82%AF%E3%82%BF%E3%82%A4%E3%83%88%E3%83%AB%E3%82%92%E6%A4%9C%E7%B4%A2%E3%81%99%E3%82%8B",
            "text": "7.2 ドラえもんのコミックタイトルを検索する",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": "8.%E3%81%BE%E3%81%A8%E3%82%81",
        "text": "8.まとめ",
        "level": 1,
        "children": []
      },
      {
        "id": "9.%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE",
        "text": "9.参考文献",
        "level": 1,
        "children": []
      }
    ],
    "toc_enabled": true,
    "should_noindex": false,
    "scheduled_publish_at": null,
    "can_send_badge": true,
    "status": "published",
    "badges": [],
    "is_mine": false,
    "is_preview": false,
    "current_user_liked": false,
    "github_repository": {
      "id": 2031,
      "name": "zenn",
      "full_name": "YadaYuki/zenn",
      "html_url": "https://github.com/YadaYuki/zenn",
      "branch_name": "master",
      "public": true,
      "show_github_link": true
    },
    "github_url": "https://github.com/YadaYuki/zenn/blob/master/articles/7e2c67d8406f0d.md",
    "github_commits_url": "https://github.com/YadaYuki/zenn/commits/master?path=articles/7e2c67d8406f0d.md",
    "github_dev_url": "https://github.dev/YadaYuki/zenn/blob/master/articles/7e2c67d8406f0d.md",
    "user": {
      "id": 13213,
      "username": "yukiyada",
      "name": "矢田宙生 / Yada Yuki",
      "avatar_small_url": "https://res.cloudinary.com/zenn/image/fetch/s--lAOvSkVv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_70/https://storage.googleapis.com/zenn-user-upload/avatar/8fe5f9a7a8.jpeg",
      "avatar_url": "https://storage.googleapis.com/zenn-user-upload/avatar/8fe5f9a7a8.jpeg",
      "bio": "Software Engineer",
      "autolinked_bio": "Software Engineer",
      "github_username": "yadayuki",
      "twitter_username": "arr0w_swe",
      "is_support_open": true,
      "tokusyo_contact": null,
      "tokusyo_name": null,
      "website_url": "https://www.yyada.jp/",
      "website_domain": "yyada.jp",
      "total_liked_count": 655,
      "ga_tracking_id": null,
      "hatena_id": null,
      "is_invoice_issuer": false
    },
    "publication": null,
    "topics": [
      {
        "id": 46,
        "name": "go",
        "display_name": "Go",
        "taggings_count": 3114,
        "image_url": "https://storage.googleapis.com/zenn-user-upload/topics/8b677725c8.png"
      },
      {
        "id": 279,
        "name": "個人開発",
        "display_name": "個人開発",
        "taggings_count": 1043,
        "image_url": "https://storage.googleapis.com/zenn-user-upload/topics/604d5b83b5.jpeg"
      },
      {
        "id": 11062,
        "name": "情報検索",
        "display_name": "情報検索",
        "taggings_count": 7,
        "image_url": null
      }
    ],
    "comments": [],
    "positive_comments_count": 0,
    "commented_users": []
  }
}
